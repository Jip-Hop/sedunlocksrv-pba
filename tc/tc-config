#!/bin/busybox ash

# Custom Tiny Core Linux RC Script

# Hide cursor
echo -e "\e[?1c"
# Disable showing keyboard input
stty -echo

# ANSI COLORS
GREEN="$(echo -e '\033[1;32m')"
MAGENTA="$(echo -e '\033[1;35m')"
NORMAL="$(echo -e '\033[0;39m')"

. /etc/init.d/busybox-aliases
export PATH=/usr/local/sbin:/usr/local/bin:"$PATH"

# Start Udev to populate /dev and handle hotplug events
/sbin/udevd --daemon 2>&1 >/dev/null
/sbin/udevadm trigger --action=add 2>&1 >/dev/null &

# Setup clock
while [ ! -e /dev/rtc0 ]; do usleep 50000; done
/sbin/hwclock -u -s &

/sbin/ifconfig lo 127.0.0.1 up
/sbin/route add 127.0.0.1 lo &

# Creates the necessary links and cache to the most recent shared libraries
/sbin/ldconfig 2>/dev/null

# DHCP, modified from /etc/init.d/dhcp.sh
# This waits until all devices have registered
/sbin/udevadm settle --timeout=5

NETDEVICES="$(awk -F: '/eth.:|tr.:/{print $1}' /proc/net/dev 2>/dev/null)"
for DEVICE in $NETDEVICES; do
  ifconfig $DEVICE | grep -q "inet addr"
  if [ "$?" != 0 ]; then
    echo -e "${GREEN}Network device ${MAGENTA}$DEVICE${GREEN} detected, DHCP broadcasting for IP.\n${NORMAL}"

    /sbin/udhcpc -b -i $DEVICE -x hostname:$(/bin/hostname) -p /var/run/udhcpc.$DEVICE.pid

    sleep 1
  fi
done

echo "Wait for network connection..."
until ifconfig | grep -q Bcast
do
    sleep 1
done

# Fix to get the 64-bit binaries working
if [ ! -d /lib64 ]; then
    ln -s /lib /lib64
fi

cd /usr/local/sbin/sedunlocksrv/
./sedunlocksrv

# Reboot when sedunlocksrv exits
echo "Rebooting..."
sleep 3
reboot -nf